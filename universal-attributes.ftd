-- import: fpm

;; Universal html attributes
;; Reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes
;; id   ->  Specifies a unique id for an element (Done)
;; title    ->  Specifies extra information about an element (Done)
;; term     ->  Specifies an unique term for linking elements within the same package

-- ft.page: Universal Attributes

-- ftd.column:
id: outer

-- ft.markdown:

These attributes are available to all `ftd` components.

-- ft.h1: `title: Optional String`

This is used to create
[title attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title)
on generated DOM.

-- ft.h1: `id: Optional String`

This attribute gives a unique identifier [id](/id/)
to any component.


;; Other universal attributes: "top", "bottom", "left", "move-up", "move-down",
;; "move-left", "move-right", "right", "align", "scale", "rotate", "scale-x",
;; "scale-y", "slot"

-- ft.h1: `top: Optional String`

-- ft.h1: `bottom: Optional String`

-- ft.h1: `left: Optional String`

-- ft.h1: `move-up: Optional String`

-- ft.h1: `move-down: Optional String`

-- ft.h1: `move-left: Optional String`

-- ft.h1: `move-right: Optional String`

-- ft.h1: `right: Optional String`

-- ft.h1: `align: Optional String`

-- ft.h1: `scale: Optional String`

-- ft.h1: `scale-x: Optional String`

-- ft.h1: `scale-y: Optional String`

-- ft.h1: `rotate: Optional String`

-- ft.h1: `slot: Optional String`

/-- ft.h1: `term: Optional String`

This attribute specifies a unique term to any component which can be used to refer it using
term linking syntax from within any markdown supporting component.

/-- ft.code: specifying term on a component
lang: ftd

\-- ftd.text A:
optional string name:
optional integer age:

\-- A:
name: abc
age: 22
term: foo

/-- ft.markdown:

To refer the above component, one can either use

- `{term: foo}` - This syntax will make the term text `"foo"` serve as a markdown link which will be linked to component `A`.

- `[xyz](term: foo)` - If someone wants to use any other text different from the `term text` as `linking text`
then one can use this syntax.

Here the linked text will be `"xyz"` which will link to the component `A`

