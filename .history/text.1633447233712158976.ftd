
-- import: fifthtry/ft
-- import: fifthtry/ft-core


-- ft.page:


-- ftd.column:
id: main


-- ft.h0: Text

Renders a text block.


-- ft.code:
lang: ftd

\-- ftd.text: hello world


-- ft.markdown:

Text accepts the below attributes as well all the [common 
attributes](/fifthtry/ftd/common/).


-- ft.h1: `text: String`

You can pass any string value. 

You have two ways to pass text value to the `ftd.text` component. 

As `caption` which is a single line text.


-- ft.code:
lang: ftd

\-- ftd.text: FTD example


-- ft.markdown:

This will be render like this:


-- ftd.text: FTD example


-- ft.code:
lang: ftd

\-- ftd.text:
text: This is an example of how to use ftd.text.


-- ft.markdown:

This will be render like this:


-- ftd.text:
text: This is an example of how to use ftd.text.


-- ft.markdown:

Multi-line text can be added to the body the `ftd.text`:


-- ft.code:
lang: ftd

\-- ftd.code:

This is a bigger text.

This can span multiple lines.


-- ft.h1: `align`

This property is used to aligns text blocks:


-- ftd.row:
spacing: 10


-- ftd.text:
align: center
border-width: 1
border-radius: 3
padding: 5

this is **align: center** text. a bit longer text so you can see what's going on.


-- ftd.text:
align: left
border-width: 1
border-radius: 3
padding: 5

this is **align: left** text. typing dummy text for examples is so boring.


-- ftd.text:
align: right
border-width: 1
border-radius: 3
padding: 5

this is **align: right** aligned text. but then you got to do what you go to do.


-- ftd.text:
align: justify
border-width: 1
border-radius: 3
padding: 5

this is **align: justify** text. or not. whatever works. I mean maybe it matters.


-- container: main


-- ft.code:
lang: ftd

\-- ftd.text: this is some center aligned text
align: center


-- ft.h1: `style`

`style` is used to change the text style. Possible values are:

- `italic`
- `underline`
- `strike`
- `heavy`
- `extra-bold`
- `bold`
- `semi-bold`
- `medium`
- `regular`
- `light`
- `extra-light`
- `hairline`

First three properties, `italic`, `underline` and `strike` can be all applied 
together, along with one of the next properties.


-- ft.code:
lang: ftd

\-- ftd.text: italic strike semi-bold
style: italic strike semi-bold


-- ft.markdown:

Which looks like this:


-- ftd.text: italic strike semi-bold
style: italic strike semi-bold


-- ft.h1: `format`

`ftd.text` uses `format` attribute to decide how to format the text. It can be 
`markdown`, the default value, which formats the text as a markdown.

`format` can also be `latex`:


-- ft.code:
lang: ftd

\-- ftd.text:
format: latex

e^{i\pi} + 1 = 0


-- ft.markdown:

Which renders as:


-- ftd.text:
format: latex

e^{i\pi} + 1 = 0


-- ft.markdown:

- `size`
- `external_font`
- `font`
- `line_height`
