-- import: fastn


-- ds.page: Common Text Kernel Attributes

-- ds.markdown:

These attributes are available to all `ftd` "kernel" components.

-- ds.h1: `text-align: string`

-- ds.markdown:

This `text-align` property sets the alignment of text. It takes input like this:

-- ds.code: specifying alignment of text
lang: ftd

\-- ftd.text: FifthTry
text-align: center

-- ds.markdown:

This will render like this:

-- ds.output:

-- ftd.text: FifthTry
width.fixed.px: 400
text-align: center
color: $inherited.colors.text-strong

-- end: ds.output

-- ds.code: specifying alignment of text
lang: ftd

\-- ftd.text: FifthTry
text-align: left

-- ds.markdown:

This will render like this:

-- ds.output:

-- ftd.text: FifthTry
width.fixed.px: 400
color: $inherited.colors.text-strong

-- end: ds.output

-- ds.h1: `style: string`

-- ds.markdown:

The `style` property specifies the font style for a text component. It accepts
multiple style separated using space ` `. It takes following values:

- `italic`: This gives italic style to text
- `underline`: Text has a line beneath it.
- `strike`: Text has a line going through its middle.
- `heavy`: Heavy Bold font. Same as font weight as 900.
- `extra-bold`: Extra Bold font. Same as font weight as 800.
- `bold`: Bold font. Same as font weight as 700.
- `semi-bold`: Semi Bold font. Same as font weight as 600.
- `medium`: Medium font. Same as font weight as 500.
- `regular`: Regular font. Same as font weight as 400.
- `light`: Light font. Same as font weight as 300.
- `extra-light`: Extra Light font. Same as font weight as 200.
- `hairline`: Very thin font. Same as font weight as 100.

 This property takes input like this:

-- ds.code: specifying style (underline)
lang: ftd

\-- ftd.text: FifthTry
style: underline

-- ds.markdown:

This will render like this:

-- ds.output:

-- ftd.text: FifthTry
;; style: underline -- TODO FTD 0.3
color: $inherited.colors.text-strong

-- end: ds.output

-- ds.code: specifying style (strike)
lang: ftd

\-- ftd.text: FifthTry
style: strike

-- ds.markdown:

This will render like this:

-- ds.output:

-- ftd.text: FifthTry
;; style: strike -- TODO FTD 0.3
color: $inherited.colors.text-strong

-- end: ds.output

-- ds.code: specifying multiple styles
lang: ftd

\-- ftd.text: FifthTry
style: italic heavy underline

-- ds.markdown:

This will render like this:

-- ds.output:

-- ftd.text: FifthTry
;; style: italic heavy underline -- TODO FTD 0.3
color: $inherited.colors.text-strong

-- end: ds.output

-- ds.h1: Custom `card` `read more`

`card` can be used as read more component like this:

-- ds.code: specifying line-clamp
lang: ftd

\-- component card:
body text:
boolean $read_more: true
integer max_lines:

\-- ftd.column:
width: fill-container
color: $inherited.colors.text-strong
spacing.fixed.px: 20

\-- ftd.text: 
text: $card.text
;; line-clamp if { card.read_more }: $card.max_lines -- TODO FTD 0.3
height.fixed.px if { card.read_more }: 20
overflow-y: auto
height.fixed.px if { !card.read_more }: 60

\-- ftd.text: Read More
if: { card.read_more }
$on-click$: $ftd.toggle($a = $card.read_more) 

\-- ftd.text: Read Less
if: { !card.read_more }
$on-click$: $ftd.toggle($a = $card.read_more)

\-- end: ftd.column

\-- end: card

\-- card:
max_lines: 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt ut labore et dolore magna aliqua. elit, sed do eiusmod.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua.

-- ds.markdown:

This will render like this:

-- ds.output:

-- card:
max_lines: 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt ut labore et dolore magna aliqua. elit, sed do eiusmod.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua.

-- end: ds.output

-- end: ds.page










-- component card:
body text:
boolean $read_more: true
integer max_lines:

-- ftd.column:
width: fill-container
color: $inherited.colors.text-strong
spacing.fixed.px: 20

-- ftd.text: 
text: $card.text
;; line-clamp if { card.read_more }: $card.max_lines -- TODO FTD 0.3
height.fixed.px if { card.read_more }: 20
overflow-y: auto
height.fixed.px if { !card.read_more }: 60

-- ftd.text: Read More
if: { card.read_more }
$on-click$: $ftd.toggle($a = $card.read_more) 

-- ftd.text: Read Less
if: { !card.read_more }
$on-click$: $ftd.toggle($a = $card.read_more)

-- end: ftd.column

-- end: card
