-- import: fpm


-- ft.page: Common Text Kernel Attributes

-- ftd.column:
id: outer-2

-- ft.markdown:

These attributes are available to all `ftd` "kernel" components.

-- ft.h1: `text-align: string`

-- ft.markdown:

This `text-align` property sets the alignment of text. It takes input like this:

-- ft.code: specifying alignment of text
lang: ftd

\-- ftd.text: FifthTry
text-align: center

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.text: FifthTry
width: 400
text-align: center
color: $fpm.color.main.text-strong

-- container: outer-2

-- ft.code: specifying alignment of text
lang: ftd

\-- ftd.text: FifthTry
text-align: left

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.text: FifthTry
width: 400
text-align: left
color: $fpm.color.main.text-strong

-- container: outer-2

-- ft.h1: `style: string`

-- ft.markdown:

The `style` property specifies the font style for a text component. It accepts
multiple style separated using space ` `. It takes following values:

- `italic`: This gives italic style to text
- `underline`: Text has a line beneath it.
- `strike`: Text has a line going through its middle.
- `heavy`: Heavy Bold font. Same as font weight as 900.
- `extra-bold`: Extra Bold font. Same as font weight as 800.
- `bold`: Bold font. Same as font weight as 700.
- `semi-bold`: Semi Bold font. Same as font weight as 600.
- `medium`: Medium font. Same as font weight as 500.
- `regular`: Regular font. Same as font weight as 400.
- `light`: Light font. Same as font weight as 300.
- `extra-light`: Extra Light font. Same as font weight as 200.
- `hairline`: Very thin font. Same as font weight as 100.

 This property takes input like this:

-- ft.code: specifying style (underline)
lang: ftd

\-- ftd.text: FifthTry
style: underline

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.text: FifthTry
style: underline
color: $fpm.color.main.text-strong

-- container: outer-2

-- ft.code: specifying style (strike)
lang: ftd

\-- ftd.text: FifthTry
style: strike

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.text: FifthTry
style: strike
color: $fpm.color.main.text-strong

-- container: outer-2

-- ft.code: specifying multiple styles
lang: ftd

\-- ftd.text: FifthTry
style: italic heavy underline

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.text: FifthTry
style: italic heavy underline
color: $fpm.color.main.text-strong

-- container: outer-2

-- ft.h1: `line-clamp:`

This `line-clamp` property takes input like this:

-- ft.code: specifying line-clamp
lang: ftd

\-- ftd.column card:
body text:
width: 300
min-height: 300
boolean read_more: true
integer max_lines:
spacing: 20

\-- ftd.text: $text
line-clamp if $read_more: $max_lines

\-- ftd.text: Read More
$on-click$: toggle $read_more
if: $read_more

\-- ftd.text: Read Less
$on-click$: toggle $read_more
if: not $read_more

\-- end: card

\-- card:
max_lines: 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt ut labore et dolore magna aliqua. elit, sed do eiusmod.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua.

-- ft.markdown:

This will render like this:

-- ft.output:

-- ftd.column card:
body text:
width: fill
boolean read_more: true
integer max_lines:
color: $fpm.color.main.text-strong
spacing: 20

--- ftd.text: $text
line-clamp if $read_more: $max_lines


--- ftd.text: Read More
$on-click$: toggle $read_more
if: $read_more

--- ftd.text: Read Less
$on-click$: toggle $read_more
if: not $read_more


-- card:
max_lines: 1

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt ut labore et dolore magna aliqua. elit, sed do eiusmod.
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua.
