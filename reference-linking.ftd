-- import: fpm

-- ft.page: Reference linking in FTD

-- ftd.column:
id: outer-column

-- ft.markdown:

As people build and create new things using FTD,
the package contents will grow in size and eventually they might want to refer to the contents
of the components defined in other files
from the current file or maybe to a component within the same file.

FTD supports reference linking which can be used to link components using [id](id: id-page).
Any [component] whether it's a heading, markdown, code-block etc. can have this unique id
associated with it since id is a [universal attribute](id: universal-attributes).


-- ft.h1: Linking syntax

-- ft.h3: **Generalized Syntax**

When the user wants to specify the linked text along with id of the component
which needs to be linked, then use this syntax

`[<linked-text>](id: <id-to-link>)`

-- ft.h3: **Condensed Syntax**

When the user wants the linked text to be same as the id itself,
then use this simplified syntax

`[<id-to-link>]`

-- ft.h3: **Escaping linking syntax**

Sometimes, there might be cases where the user wants to treat this linking syntax as a raw text instead of a link,
he/she can use the escape character `\` preceding this syntax to make it behave as a raw text.
For eg. `\[foo]`, `\[this is escaped](id: hello)`

-- ft.h1: How to use linking syntax

To link any component, we just have to give a unique id to the component we want to refer,
and use the linking syntax in the component from where we want to refer.

-- ft.code: Example code to show how linking is done
lang: ftd

\;; This ft.h1 component could be within the same file
\;; or maybe in a different file within the same package
\-- ft.h1: Linking example
id: A

\-- ft.markdown:

I want to link to component ft.h1 having id: A.
This is how we link.

Link with different linked text - [different-text](id: A)
The linked text above will be "different-text" which will link
to ft.h1 component defined above.

Link with linked text same as id - [A]
Isn't this even more simpler ?.

-- ft.h2: Constraints

- These user defined `id's` on components have to be `unique` within the same package.

- Scope of linking components is limited within the `same package`.
Cross Linking of components between two different packages is not supported yet.

- Using `[x]` or `[X]` as linking syntax is not allowed if your component has an `id: x` as these are reserved for checkboxes, instead use
`[x](id: x)` or `[X](id: X)` to get the same effect.

- This linking logic will only work in `ftd.text` and the components derived using this `ftd.text` component.
